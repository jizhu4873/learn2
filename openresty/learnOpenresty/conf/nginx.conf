
#user  nobody;
worker_processes  1;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    lua_code_cache off;

    lua_shared_dict ngx_cache 1m;

    #lua_package_cpath "lualib\?.so;;";
    lua_package_path "$prefix/?.luac;$prefix/?.lua;;";
    #lua_package_path "E:\git\learn\learnOpenresty\lualib\?.lua;;";

    include       mime.types;
    default_type  text/html;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  _;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location /hello {
           #default_type 'application/octet-stream';
           default_type 'text/html';
           #content_by_lua 'ngx.say("hello")';
           #keepalive_timeout  0; 强制关闭连接
           #expires 5m;
           content_by_lua_file src/hello.lua;
        }

         location /mysql {
            default_type 'text/html';
            content_by_lua_file src/mysql.lua;
         }
         location /redis {
            default_type 'text/html';
            content_by_lua_file src/redis.lua;
         }
         location /redis_vs_shared {
            default_type 'text/html';
            content_by_lua_file src/redis_vs_shared.lua;
         }
          location /headers {
            default_type 'text/html';
            content_by_lua_file src/headers.lua;
         }
         location /capture {
            default_type 'text/html';
            content_by_lua_file src/capture.lua;
         }

         location ~ ^/app/([-_a-zA-Z0-9/]+) {
          default_type 'text/html';
            content_by_lua_file src/$1.lua;
         }
      location /other {
        set $dog "$dog world";
        echo "$uri dog: $dog";
        content_by_lua '
          ngx.ctx.foo="bar";
        ';
      }

      location /lua {
        set $dog 'hello';
        content_by_lua_block {
            local ctx = {};
            res = ngx.location.capture("/other",{ share_all_vars = true,ctx=ctx });

            ngx.print(res.body)
            ngx.say(ngx.var.uri, ": ", ngx.var.dog)
            ngx.say(ctx.foo);
            ngx.say(ngx.ctx.foo);
      }
    }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }



        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
